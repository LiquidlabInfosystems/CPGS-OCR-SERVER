# import base64

# # Sample Base64 string (Replace this with your actual Base64 data)
# base64_string = "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"
# # Decode Base64 string
# image_data = base64.b64decode(base64_string)

# # Save as an image file
# with open("ocr.png", "wb") as file:
#     file.write(image_data)

# print("Image saved as ocr.png")
import cv2
print(cv2.__version__)
